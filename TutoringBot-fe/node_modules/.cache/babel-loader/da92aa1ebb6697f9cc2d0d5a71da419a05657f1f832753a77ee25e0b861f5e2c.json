{"ast":null,"code":"var _jsxFileName = \"/home/haps/Desktop/TutoringBot/TutoringBot-fe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, TextField, Button, Typography, Box, Paper } from \"@mui/material\";\nimport ChatBox from \"./components/ChatBox\";\nimport MessageInput from \"./components/MessageInput\";\nimport { connectToSession, sendMessageToAgent } from \"./api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [userId, setUserId] = useState(\"user1\");\n  const [sessionId, setSessionId] = useState(\"sess1\");\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const connect = async () => {\n    try {\n      await connectToSession(userId, sessionId);\n      setConnected(true);\n    } catch (err) {\n      alert(\"Failed to connect. See console.\");\n      console.error(err);\n    }\n  };\n  const handleSend = async text => {\n    if (!text.trim()) return;\n    setMessages(prev => [...prev, {\n      sender: \"You\",\n      text\n    }]);\n    try {\n      const finalText = await sendMessageToAgent(userId, sessionId, text);\n      setMessages(prev => [...prev, {\n        sender: \"Tutor Bot\",\n        text: finalText\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"Tutor Bot\",\n        text: \"⚠️ Failed to get a response.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"AI Tutor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"User ID\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        fullWidth: true,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Session ID\",\n        value: sessionId,\n        onChange: e => setSessionId(e.target.value),\n        fullWidth: true,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connect,\n        fullWidth: true,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 1,\n          color: connected ? \"green\" : \"red\"\n        },\n        children: connected ? \"✅ Connected!\" : \"Not connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), connected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"af8HatsFWMqprxfk6lfqCUKPsEc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Typography","Box","Paper","ChatBox","MessageInput","connectToSession","sendMessageToAgent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userId","setUserId","sessionId","setSessionId","connected","setConnected","messages","setMessages","connect","err","alert","console","error","handleSend","text","trim","prev","sender","finalText","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","p","mb","label","value","onChange","e","target","fullWidth","onClick","color","onSend","_c","$RefreshReg$"],"sources":["/home/haps/Desktop/TutoringBot/TutoringBot-fe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, TextField, Button, Typography, Box, Paper } from \"@mui/material\";\nimport ChatBox from \"./components/ChatBox\";\nimport MessageInput from \"./components/MessageInput\";\nimport { connectToSession, sendMessageToAgent } from \"./api\";\n\nexport default function App() {\n  const [userId, setUserId] = useState(\"user1\");\n  const [sessionId, setSessionId] = useState(\"sess1\");\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const connect = async () => {\n    try {\n      await connectToSession(userId, sessionId);\n      setConnected(true);\n    } catch (err) {\n      alert(\"Failed to connect. See console.\");\n      console.error(err);\n    }\n  };\n\n  const handleSend = async (text) => {\n    if (!text.trim()) return;\n    setMessages((prev) => [...prev, { sender: \"You\", text }]);\n\n    try {\n      const finalText = await sendMessageToAgent(userId, sessionId, text);\n      setMessages((prev) => [...prev, { sender: \"Tutor Bot\", text: finalText }]);\n    } catch (err) {\n      setMessages((prev) => [...prev, { sender: \"Tutor Bot\", text: \"⚠️ Failed to get a response.\" }]);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>AI Tutor</Typography>\n      <Paper sx={{ p: 2, mb: 2 }}>\n        <TextField\n          label=\"User ID\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          fullWidth\n          sx={{ mb: 2 }}\n        />\n        <TextField\n          label=\"Session ID\"\n          value={sessionId}\n          onChange={(e) => setSessionId(e.target.value)}\n          fullWidth\n          sx={{ mb: 2 }}\n        />\n        <Button variant=\"contained\" onClick={connect} fullWidth>\n          Connect\n        </Button>\n        <Typography variant=\"body2\" sx={{ mt: 1, color: connected ? \"green\" : \"red\" }}>\n          {connected ? \"✅ Connected!\" : \"Not connected\"}\n        </Typography>\n      </Paper>\n\n      {connected && (\n        <>\n          <ChatBox messages={messages} />\n          <MessageInput onSend={handleSend} />\n        </>\n      )}\n    </Container>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}