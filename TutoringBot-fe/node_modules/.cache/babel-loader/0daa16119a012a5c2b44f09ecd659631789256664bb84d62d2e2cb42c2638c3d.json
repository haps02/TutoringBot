{"ast":null,"code":"//const apiBase = process.env.REACT_APP_BASE_URL;\nconst apiBase = \"http://localhost:8080\";\nexport async function connectToSession(userId, sessionId) {\n  const res = await fetch(`${apiBase}/apps/multi_agent_tool/users/${userId}/sessions/${sessionId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!res.ok) throw new Error(`Server error: ${res.status}`);\n  return res.json();\n}\nexport async function sendMessageToAgent(userId, sessionId, text) {\n  const res = await fetch(`${apiBase}/run`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      appName: \"multi_agent_tool\",\n      userId,\n      sessionId,\n      newMessage: {\n        role: \"user\",\n        parts: [{\n          text\n        }]\n      }\n    })\n  });\n  if (!res.ok) throw new Error(`API error: ${res.status}`);\n  const data = await res.json();\n  return data[data.length - 1].content.parts[0].text;\n  return \"⚠️ No final response returned.\";\n}","map":{"version":3,"names":["apiBase","connectToSession","userId","sessionId","res","fetch","method","headers","ok","Error","status","json","sendMessageToAgent","text","body","JSON","stringify","appName","newMessage","role","parts","data","length","content"],"sources":["/home/haps/Desktop/TutoringBot/TutoringBot-fe/src/api.js"],"sourcesContent":["//const apiBase = process.env.REACT_APP_BASE_URL;\nconst apiBase = \"http://localhost:8080\"\nexport async function connectToSession(userId, sessionId) {\n  const res = await fetch(`${apiBase}/apps/multi_agent_tool/users/${userId}/sessions/${sessionId}`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" }\n  });\n  if (!res.ok) throw new Error(`Server error: ${res.status}`);\n  return res.json();\n}\n\nexport async function sendMessageToAgent(userId, sessionId, text) {\n  const res = await fetch(`${apiBase}/run`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      appName: \"multi_agent_tool\",\n      userId,\n      sessionId,\n      newMessage: {\n        role: \"user\",\n        parts: [{ text }]\n      }\n    })\n  });\n\n  if (!res.ok) throw new Error(`API error: ${res.status}`);\n  const data = await res.json();\n  \n  return data[data.length-1].content.parts[0].text;\n\n  return \"⚠️ No final response returned.\";\n}\n\n\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,uBAAuB;AACvC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAEC,SAAS,EAAE;EACxD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,gCAAgCE,MAAM,aAAaC,SAAS,EAAE,EAAE;IAChGG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;EACF,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiBL,GAAG,CAACM,MAAM,EAAE,CAAC;EAC3D,OAAON,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,kBAAkBA,CAACV,MAAM,EAAEC,SAAS,EAAEU,IAAI,EAAE;EAChE,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,MAAM,EAAE;IACxCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,OAAO,EAAE,kBAAkB;MAC3Bf,MAAM;MACNC,SAAS;MACTe,UAAU,EAAE;QACVC,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE,CAAC;UAAEP;QAAK,CAAC;MAClB;IACF,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACT,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAcL,GAAG,CAACM,MAAM,EAAE,CAAC;EACxD,MAAMW,IAAI,GAAG,MAAMjB,GAAG,CAACO,IAAI,CAAC,CAAC;EAE7B,OAAOU,IAAI,CAACA,IAAI,CAACC,MAAM,GAAC,CAAC,CAAC,CAACC,OAAO,CAACH,KAAK,CAAC,CAAC,CAAC,CAACP,IAAI;EAEhD,OAAO,gCAAgC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}